openapi: 3.0.0
info:
  title: GitHub Information Fetcher API
  description: API for fetching information from GitHub about users and their repositories.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/github

paths:
  /users/{username}/repos:
    get:
      summary: List User Repositories
      description: Retrieves a list of repositories along with their branches for a given GitHub username. Responds only in JSON format.
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: The GitHub username for which to retrieve the repositories.
      responses:
        '200':
          description: Successfully retrieved the list of repositories and branches.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryBranchesDto'
              example:
                [
                  {
                    "repositoryName": "octocat.github.io",
                    "ownerLogin": "octocat",
                    "branches": [
                      {
                        "name": "gh-pages",
                        "commit": {
                          "sha": "c0e4a095428f36b81f0bd4239d353f71918cbef3"
                        }
                      },
                      {
                        "name": "master",
                        "commit": {
                          "sha": "3a9796cf19902af0f7e677391b340f1ae4128433"
                        }
                      }
                    ]
                  },
                  {
                    "repositoryName": "git-consortium",
                    "ownerLogin": "octocat",
                    "branches": [
                      {
                        "name": "master",
                        "commit": {
                          "sha": "b33a9c7c02ad93f621fa38f0e9fc9e867e12fa0e"
                        }
                      }
                    ]
                  },
                  {
                    "repositoryName": "test-repo1",
                    "ownerLogin": "octocat",
                    "branches": [
                      {
                        "name": "gh-pages",
                        "commit": {
                          "sha": "57523742631876181d95bc268e09fb3fd1a4d85e"
                        }
                      }
                    ]
                  },
                  {
                    "repositoryName": "Spoon-Knife",
                    "ownerLogin": "octocat",
                    "branches": [
                      {
                        "name": "change-the-title",
                        "commit": {
                          "sha": "f439fc5710cd87a4025247e8f75901cdadf5333d"
                        }
                      },
                      {
                        "name": "main",
                        "commit": {
                          "sha": "d0dd1f61b33d64e29d8bc1372a94ef6a2fee76a9"
                        }
                      },
                      {
                        "name": "test-branch",
                        "commit": {
                          "sha": "58060701b538587e8b4ab127253e6ed6fbdc53d1"
                        }
                      }
                    ]
                  },
                  {
                    "repositoryName": "Hello-World",
                    "ownerLogin": "octocat",
                    "branches": [
                      {
                        "name": "master",
                        "commit": {
                          "sha": "7fd1a60b01f91b314f59955a4e4d4e80d8edf11d"
                        }
                      },
                      {
                        "name": "octocat-patch-1",
                        "commit": {
                          "sha": "b1b3f9723831141a31a1a7252a213e216ea76e56"
                        }
                      },
                      {
                        "name": "test",
                        "commit": {
                          "sha": "b3cbd5bbd7e81436d2eee04537ea2b4c0cad4cdf"
                        }
                      }
                    ]
                  },
                  {
                    "repositoryName": "hello-worId",
                    "ownerLogin": "octocat",
                    "branches": [
                      {
                        "name": "master",
                        "commit": {
                          "sha": "7e068727fdb347b685b658d2981f8c85f7bf0585"
                        }
                      }
                    ]
                  }
                ]
        '404':
          description: The user was not found on GitHub.
          content:
            application/json:
              example:
                message: "Not Found"
                status: 404
        '406':
          description: The requested media type is not supported, only application/json is supported.
          content:
            application/json:
              example:
                Message: "The requested media type is not supported"
                status: 406

components:
  schemas:
    RepositoryBranchesDto:
      type: object
      properties:
        repositoryName:
          type: string
          description: The name of the repository.
        ownerLogin:
          type: string
          description: The login of the repository owner.
        branches:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
      required:
        - repositoryName
        - ownerLogin
        - branches

    Branch:
      type: object
      properties:
        name:
          type: string
          description: The name of the branch.
        commit:
          type: object
          properties:
            sha:
              type: string
              description: The SHA of the latest commit on the branch.
          required:
            - sha
      required:
        - name
        - commit

    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code of the error response.
        Message:
          type: string
          description: A message describing the error.
      required:
        - status
        - Message